[{"E:\\projects\\react\\admin_mm_store_ms\\src\\index.js":"1","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\Main.js":"2","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\AdminIndex.js":"3","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\Login.js":"4","E:\\projects\\react\\admin_mm_store_ms\\src\\config\\apiUrl.js":"5","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\staffAdd.js":"6","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\staffList.js":"7","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\StaffList.js":"8","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\StaffAdd.js":"9","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\dramaManage\\DramaAdd.js":"10","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\dramaManage\\DramaList.js":"11","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\OrderManageList.js":"12","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\goodsManage\\GoodsList.js":"13","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\goodsManage\\GoodsAdd.js":"14","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\teamManage\\TeamList.js":"15","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\teamManage\\TeamAdd.js":"16","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\roomManage\\RoomAdd.js":"17","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\roomManage\\RoomList.js":"18"},{"size":162,"mtime":1611492333580,"results":"19","hashOfConfig":"20"},{"size":391,"mtime":1613732485808,"results":"21","hashOfConfig":"20"},{"size":7763,"mtime":1638985738058,"results":"22","hashOfConfig":"20"},{"size":3161,"mtime":1638796610851,"results":"23","hashOfConfig":"20"},{"size":1781,"mtime":1638977558495,"results":"24","hashOfConfig":"20"},{"size":5966,"mtime":1638782569550,"results":"25","hashOfConfig":"20"},{"size":2631,"mtime":1638779597237,"results":"26","hashOfConfig":"20"},{"size":2876,"mtime":1638952342405,"results":"27","hashOfConfig":"20"},{"size":5966,"mtime":1638782569550,"results":"28","hashOfConfig":"20"},{"size":14927,"mtime":1638870054098,"results":"29","hashOfConfig":"20"},{"size":10308,"mtime":1638989339636,"results":"30","hashOfConfig":"20"},{"size":6871,"mtime":1638960580699,"results":"31","hashOfConfig":"20"},{"size":7040,"mtime":1638960525527,"results":"32","hashOfConfig":"20"},{"size":5458,"mtime":1638889040382,"results":"33","hashOfConfig":"20"},{"size":8134,"mtime":1638977969955,"results":"34","hashOfConfig":"20"},{"size":8890,"mtime":1638985323508,"results":"35","hashOfConfig":"20"},{"size":4893,"mtime":1638952009486,"results":"36","hashOfConfig":"20"},{"size":3712,"mtime":1638951971000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1b8xhqh",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"E:\\projects\\react\\admin_mm_store_ms\\src\\index.js",[],["84","85"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\Main.js",[],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\AdminIndex.js",["86","87","88","89","90","91","92","93","94","95","96"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\Login.js",["97"],"import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Card, Input, Button, Spin, message } from \"antd\";\r\nimport { SmileOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport \"../static/css/Login.css\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\n\r\nfunction Login(props) {\r\n  const [userName, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const checkLogin = () => {\r\n    setIsLoading(true);\r\n    if (!userName) {\r\n      message.error(\"用户名不可为空\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    } else if (!password) {\r\n      message.error(\"密码不可为空\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    }\r\n\r\n    let dataProps = {\r\n      userName: userName,\r\n      password: password,\r\n    };\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: servicePath.checkLogin,\r\n      data: dataProps,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n      console.log(\"res.data.data========\" + JSON.stringify(res.data.data));\r\n      if (res.data.code == 1) {\r\n        localStorage.setItem(\"Id\", res.data.data.Id);\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data.data));\r\n        props.history.push(\"/index\");\r\n      } else {\r\n        message.error(\"用户名或密码错误\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-div\">\r\n      <Spin tip=\"Lading...\" spinning={isLoading}>\r\n        <Card bordered={true} style={{ width: 400, padding: 20,borderRadius:6 }}>\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginBottom: 20,\r\n              fontWeight: \"bold\",\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            剧有趣后台管理系统\r\n          </div>\r\n          <Input\r\n            id=\"useName\"\r\n            size=\"large\"\r\n            placeholder=\"输入管理员账号\"\r\n            prefix={\r\n              <UserOutlined\r\n                type=\"user\"\r\n                style={{ color: \"rgba(0,0,0,0.25)\" }}\r\n              ></UserOutlined>\r\n            }\r\n            onChange={(e) => {\r\n              setUserName(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Input\r\n            style={{ marginTop: 20 }}\r\n            id=\"password\"\r\n            size=\"large\"\r\n            placeholder=\"输入管理员密码\"\r\n            prefix={\r\n              <SmileOutlined\r\n                type=\"password\"\r\n                style={{ color: \"rgba(0,0,0,0.25)\" }}\r\n              ></SmileOutlined>\r\n            }\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <br></br>\r\n          <Button\r\n            style={{ marginTop: 20 }}\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            block\r\n            onClick={checkLogin}\r\n          >\r\n            登录\r\n          </Button>\r\n        </Card>\r\n      </Spin>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\config\\apiUrl.js",[],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\staffAdd.js",["98","99","100","101","102","103"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\staffList.js",["104","105"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\StaffList.js",["106","107","108","109"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../static/css/staffManage/StaffList.css\";\r\nimport { List, Row, Col, Modal, message, Button, Switch, Avatar } from \"antd\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\n\r\nfunction StaffList(props) {\r\n  const [list, setList] = useState([]);\r\n\r\n  const getList = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getDMUsers,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      console.log(res);\r\n      setList(res.data.data);\r\n    });\r\n  };\r\n\r\n  //修改剧本的跳转方法\r\n  const updateStaff = (id, checked) => {\r\n    props.history.push(\"/index/staffAdd/\" + id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          paddingTop: 20,\r\n          paddingBottom: 10,\r\n          paddingLeft: 16,\r\n          paddingRight: 22,\r\n        }}\r\n      >\r\n        <Row className=\"list-div\">\r\n          <Col span={4}>\r\n            <b>头像</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>工号</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>昵称</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>性别</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>热度</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>操作</b>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div\r\n        id=\"scrollableDiv\"\r\n        style={{\r\n          paddingLeft: \"16px\",\r\n          border: \"1px solid rgba(140, 140, 140, 0.35)\",\r\n        }}\r\n      >\r\n        <InfiniteScroll\r\n          dataLength={list.length}\r\n          scrollableTarget=\"scrollableDiv\"\r\n        >\r\n          <List\r\n            style={{ height: 700, overflowY: \"scroll\" }}\r\n            dataSource={list}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <Row\r\n                  className=\"list-div\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <Col span={4}>\r\n                    <Avatar shape=\"square\" size={54} src={item.dmAvatarUrl} />\r\n                  </Col>\r\n                  <Col span={4}>{item.loginName}</Col>\r\n                  <Col span={4}>{item.dmNickName}</Col>\r\n                  <Col span={4}>{item.dmGender == 1 ? \"男\" : \"女\"}</Col>\r\n                  <Col span={4}>{item.dmHot}</Col>\r\n                  <Col span={4}>\r\n                    <Button type=\"primary\" onClick={() => updateStaff(item.Id)}>\r\n                      修改\r\n                    </Button>\r\n                    &nbsp;\r\n                  </Col>\r\n                </Row>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffList;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\staffManage\\StaffAdd.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../static/css/staffManage/StaffAdd.css\";\r\nimport { Row, Col, Form, Upload, Input, message, Button, Radio } from \"antd\";\r\nimport {\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  LeftSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\nimport { icons } from \"antd/lib/image/PreviewGroup\";\r\n\r\nconst StaffAdd = (props) => {\r\n  const [Id, setId] = useState(-1);\r\n  // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [imageUrl, setImageUrl] = useState(\"\"); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [loading, setLoading] = useState(false); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n\r\n  useEffect(() => {\r\n    let tempId = props.match.params.id;\r\n    console.log(\"StaffAdd--useEffect===\" + tempId);\r\n    if (tempId) {\r\n      setId(tempId);\r\n      getUser(tempId);\r\n    } else {\r\n      autoId();\r\n    }\r\n  }, []);\r\n\r\n  const autoId = (Id) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.autoId,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      console.log(\"res.data.data========\" + JSON.stringify(res.data.data));\r\n      if (res.data.code == 1) {\r\n        form.setFieldsValue({\r\n          loginName: res.data.data,\r\n        });\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n  const getUser = (Id) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getUser,\r\n      params: { Id: Id },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      console.log(\"res.data.data========\" + JSON.stringify(res.data.data));\r\n      if (res.data.code == 1) {\r\n        let data = res.data.data;\r\n        form.setFieldsValue({\r\n          ...data,\r\n        });\r\n        setImageUrl(data.dmAvatarUrl);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        form.setFieldsValue({\r\n          dmAvatarUrl: imageUrl,\r\n        });\r\n      });\r\n    }\r\n  };\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJPG = file.type === \"image/jpeg\";\r\n    const isPNG = file.type === \"image/png\";\r\n    const isGIF = file.type === \"image/gif\";\r\n    const isBMP = file.type === \"image/bmp\";\r\n    if (!(isJPG || isPNG || isGIF || isBMP)) {\r\n      message.error(\"您只能上传PNG、JPG、JPEG、Gif、BMP格式的图片\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"您上传的图片不能超过2MB!\");\r\n    }\r\n    return (isJPG || isPNG || isGIF || isBMP) && isLt2M;\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: Id == -1 ? servicePath.inertUser : servicePath.updateUser,\r\n      data: values,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      if (res.data.code == 1) {\r\n        message.success(Id == -1 ? \"创建成功\" : \"修改成功\");\r\n        props.history.push(\"/index/staffList\");\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 8,\r\n    },\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {Id != -1 && Id != 0 ? (\r\n        <div onClick={handleBack} style={{ width: \"60px\" }}>\r\n          <LeftSquareOutlined /> 返回\r\n        </div>\r\n      ) : null}\r\n\r\n      <Form {...layout} form={form} onFinish={onFinish}>\r\n        <Form.Item\r\n          name=\"loginName\"\r\n          label=\"工号\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input disabled={true} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"loginPsw\"\r\n          label=\"密码\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"dmNickName\" label=\"昵称\" initialValue=\"\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"dmAvatarUrl\" label=\"头像\" initialValue=\"\">\r\n          <Upload\r\n            listType=\"picture-card\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"性别\" name=\"dmGender\" initialValue={0}>\r\n          <Radio.Group>\r\n            <Radio.Button value={1}>男</Radio.Button>\r\n            <Radio.Button value={0}>女</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {Id == -1 ? \"确认创建\" : \"确认修改\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffAdd;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\dramaManage\\DramaAdd.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../static/css/dramaManage/DramaAdd.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Upload,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Radio,\r\n  InputNumber,\r\n  Checkbox,\r\n  Space,\r\n  List,\r\n  Card,\r\n  Image,\r\n} from \"antd\";\r\nimport {\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  LeftSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\nimport { icons } from \"antd/lib/image/PreviewGroup\";\r\nconst { TextArea } = Input;\r\n\r\nconst DramaAdd = (props) => {\r\n  const [Id, setId] = useState(-1);\r\n  // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [imageUrl, setImageUrl] = useState(\"\"); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [loading, setLoading] = useState(false); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [nan, setNan] = useState(0);\r\n  const [nv, setNv] = useState(0);\r\n  const [fanChuan, setFanChuan] = useState(\"\");\r\n  const [roleList, setRoleList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let tempId = props.match.params.id;\r\n    console.log(\"DramaAdd--useEffect===\" + tempId);\r\n\r\n    if (tempId) {\r\n      setId(tempId);\r\n      getDramaDetail(tempId);\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  const getDramaDetail = (Id) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getDramaDetail,\r\n      params: { Id: Id },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      if (res.data.code == 1) {\r\n        let data = res.data.data;\r\n        console.log(\"res.data.data========\" + JSON.stringify(res.data.data));\r\n        form.setFieldsValue({\r\n          ...data,\r\n        });\r\n        setRoleList(data.roles);\r\n        setImageUrl(data.dramaCover);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        form.setFieldsValue({\r\n          dramaCover: imageUrl,\r\n        });\r\n      });\r\n    }\r\n  };\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJPG = file.type === \"image/jpeg\";\r\n    const isPNG = file.type === \"image/png\";\r\n    const isGIF = file.type === \"image/gif\";\r\n    const isBMP = file.type === \"image/bmp\";\r\n    if (!(isJPG || isPNG || isGIF || isBMP)) {\r\n      message.error(\"您只能上传PNG、JPG、JPEG、Gif、BMP格式的图片\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"您上传的图片不能超过2MB!\");\r\n    }\r\n    return (isJPG || isPNG || isGIF || isBMP) && isLt2M;\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    if (Id != -1) {\r\n      values.Id = Id;\r\n    }\r\n    values.NanNvShu = nan + \"男\" + nv + \"女\" + fanChuan;\r\n    values.numbers = nan + nv;\r\n    values.roles = roleList;\r\n    console.log(\"Success:\", values);\r\n    axios({\r\n      method: \"post\",\r\n      url: Id == -1 ? servicePath.inertDrama : servicePath.updateDrama,\r\n      data: values,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      if (res.data.code == 1) {\r\n        message.success(Id == -1 ? \"创建成功\" : \"修改成功\");\r\n        props.history.push(\"/index/dramaList\");\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 20,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 8,\r\n    },\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"page-drama-add\">\r\n      {Id != -1 && Id != 0 ? (\r\n        <div onClick={handleBack} style={{ width: \"60px\" }}>\r\n          <LeftSquareOutlined /> 返回\r\n        </div>\r\n      ) : null}\r\n\r\n      <Form {...layout} form={form} onFinish={onFinish}>\r\n        <Form.Item name=\"dramaCover\" label=\"剧本封面\" initialValue=\"\">\r\n          <Upload\r\n            listType=\"picture-card\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} style={{ width: 120, height: 160 }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"dramaName\"\r\n          label=\"剧本名称\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ width: 600 }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"profile\"\r\n          label=\"剧本简介\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea maxLength={76} style={{ height: 60, width: 600 }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"时长\"\r\n          name=\"duration\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value={3}>3小时</Radio.Button>\r\n            <Radio.Button value={4}>4小时</Radio.Button>\r\n            <Radio.Button value={5}>5小时</Radio.Button>\r\n            <Radio.Button value={6}>6小时</Radio.Button>\r\n            <Radio.Button value={7}>7小时</Radio.Button>\r\n            <Radio.Button value={8}>8小时</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"背景\"\r\n          name=\"background\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value=\"古风\">古风</Radio.Button>\r\n            <Radio.Button value=\"民国\">民国</Radio.Button>\r\n            <Radio.Button value=\"现代\">现代</Radio.Button>\r\n            <Radio.Button value=\"未来\">未来</Radio.Button>\r\n            <Radio.Button value=\"架空\">架空</Radio.Button>\r\n            <Radio.Button value=\"日式\">日式</Radio.Button>\r\n            <Radio.Button value=\"欧式\">欧式</Radio.Button>\r\n            <Radio.Button value=\"其他\">其他</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"主题\"\r\n          name=\"theme\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value=\"惊悚\">惊悚</Radio.Button>\r\n            <Radio.Button value=\"情感\">情感</Radio.Button>\r\n            <Radio.Button value=\"推理\">推理</Radio.Button>\r\n            <Radio.Button value=\"欢乐\">欢乐</Radio.Button>\r\n            <Radio.Button value=\"阵营\">阵营</Radio.Button>\r\n            <Radio.Button value=\"机制\">机制</Radio.Button>\r\n            <Radio.Button value=\"谍战\">谍战</Radio.Button>\r\n            <Radio.Button value=\"武侠\">武侠</Radio.Button>\r\n            <Radio.Button value=\"玄幻\">玄幻</Radio.Button>\r\n            <Radio.Button value=\"立意\">立意</Radio.Button>\r\n            <Radio.Button value=\"其他\">其他</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"类型\"\r\n          name=\"type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value=\"新本格\">新本格</Radio.Button>\r\n            <Radio.Button value=\"本格\">本格</Radio.Button>\r\n            <Radio.Button value=\"变格\">变格</Radio.Button>\r\n            <Radio.Button value=\"还原\">还原</Radio.Button>\r\n            <Radio.Button value=\"封闭\">封闭</Radio.Button>\r\n            <Radio.Button value=\"半封闭\">半封闭</Radio.Button>\r\n            <Radio.Button value=\"开放\">开放</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"难度\"\r\n          name=\"difficulty\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value=\"简单\">简单</Radio.Button>\r\n            <Radio.Button value=\"进阶\">进阶</Radio.Button>\r\n            <Radio.Button value=\"硬核\">硬核</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item label=\"男女数\">\r\n          <Space>\r\n            <InputNumber\r\n              min={1}\r\n              max={10 - nv}\r\n              style={{ width: 100 }}\r\n              addonAfter={\"男\"}\r\n              onChange={(value) => {\r\n                setNan(value);\r\n                setTimeout(() => {}, 100);\r\n                setRoleList(new Array(value + nv).fill({}));\r\n              }}\r\n            />\r\n            <InputNumber\r\n              min={1}\r\n              max={10 - nan}\r\n              style={{ width: 100 }}\r\n              addonAfter={\"女\"}\r\n              onChange={(value) => {\r\n                setNv(value);\r\n                setRoleList(new Array(nan + value).fill({}));\r\n              }}\r\n            />\r\n            <Checkbox\r\n              onChange={(e) => {\r\n                form.setFieldsValue({\r\n                  NanNvShu: \"\",\r\n                });\r\n                if (e.target.checked) {\r\n                  setFanChuan(\"(可反串)\");\r\n                } else {\r\n                  setFanChuan(\"\");\r\n                }\r\n              }}\r\n            >\r\n              可反串\r\n            </Checkbox>\r\n          </Space>\r\n        </Form.Item>\r\n        <Form.Item label=\"媒体评分\" name=\"dramaGrade\" initialValue={1}>\r\n          <InputNumber min={1} max={10} style={{ width: 100 }} />\r\n        </Form.Item>\r\n        <Form.Item label=\"是否预发\" name=\"beforehand\" initialValue={0}>\r\n          <Radio.Group>\r\n            <Radio.Button value={1}>是</Radio.Button>\r\n            <Radio.Button value={0}>否</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"价格\"\r\n          name=\"price\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"必填项\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber style={{ width: 100 }} />\r\n        </Form.Item>\r\n        <Form.Item label=\"角色\">\r\n          <Space>\r\n            <List\r\n              grid={{ gutter: 16, column: roleList.length }}\r\n              dataSource={roleList}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <Card\r\n                    hoverable\r\n                    bordered\r\n                    style={{ borderRadius: 6, width: 120 }}\r\n                  >\r\n                    <div>\r\n                      <Upload\r\n                        listType=\"picture-card\"\r\n                        showUploadList={false}\r\n                        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                        beforeUpload={beforeUpload}\r\n                        onChange={handleChange}\r\n                      >\r\n                        {item.roleAvatar ? (\r\n                          <Image\r\n                            style={{\r\n                              borderTopLeftRadius: 4,\r\n                              borderTopRightRadius: 4,\r\n                              width: 120,\r\n                              height: 160,\r\n                            }}\r\n                            preview={false}\r\n                            src={item.roleAvatar}\r\n                          />\r\n                        ) : (\r\n                          uploadButton\r\n                        )}\r\n                      </Upload>\r\n\r\n                      <div\r\n                        className=\"rolefooter\"\r\n                        style={{\r\n                          color: \"black\",\r\n                          width: 120,\r\n                          borderBottomLeftRadius: 4,\r\n                          borderBottomRightRadius: 4,\r\n                        }}\r\n                      >\r\n                        <Input\r\n                          style={{\r\n                            paddingLeft: 8,\r\n                            paddingRight: 8,\r\n                            fontWeight: \"bold\",\r\n                            fontSize: 12,\r\n                          }}\r\n                          bordered={false}\r\n                          placeholder=\"请输入角色名字\"\r\n                          value={item.roleName}\r\n                          onChange={(e) => {\r\n                            let roleListTemp = JSON.parse(\r\n                              JSON.stringify(roleList)\r\n                            );\r\n                            roleListTemp[index].roleName = e.target.value;\r\n                            setRoleList(roleListTemp);\r\n                          }}\r\n                        ></Input>\r\n                        <Radio.Group\r\n                          bordered={false}\r\n                          onChange={(e) => {\r\n                            let roleListTemp = JSON.parse(\r\n                              JSON.stringify(roleList)\r\n                            );\r\n                            roleListTemp[index].roleSex = e.target.value;\r\n                            setRoleList(roleListTemp);\r\n                          }}\r\n                          value={item.roleSex}\r\n                        >\r\n                          <Radio.Button value=\"男\">男</Radio.Button>\r\n                          <Radio.Button value=\"女\">女</Radio.Button>\r\n                        </Radio.Group>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Space>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {Id == -1 ? \"确认创建\" : \"确认修改\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DramaAdd;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\dramaManage\\DramaList.js",["137","138","139","140"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\OrderManageList.js",["141","142","143","144","145","146","147","148","149","150","151","152"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  List,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Button,\r\n  Switch,\r\n  Radio,\r\n  Input,\r\n} from \"antd\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nconst { confirm } = Modal;\r\n\r\nconst removeEmpty = (obj) => {\r\n  Object.keys(obj).forEach(function (key) {\r\n    (obj[key] && typeof obj[key] === \"object\" && removeEmpty(obj[key])) ||\r\n      ((obj[key] === undefined || obj[key] === null || obj[key] === \"\") &&\r\n        delete obj[key]);\r\n  });\r\n  return obj;\r\n};\r\nfunction OrderManageList(props) {\r\n  const [list, setList] = useState([]);\r\n  const [state, setState] = useState(30);\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const getList = () => {\r\n    let params = {\r\n      state: state,\r\n      userName: userName,\r\n    };\r\n    params = removeEmpty(params);\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getOrderList,\r\n      withCredentials: true,\r\n      params: params,\r\n    }).then((res) => {\r\n      console.log(res);\r\n      setList(res.data.data);\r\n    });\r\n  };\r\n\r\n  const deliverGoods = (id, state) => {\r\n    confirm({\r\n      title:\r\n        state == 40 ? \"确定已经把商品交给顾客了吗？\" : \"确定进行退款操作吗？\",\r\n      content: \"确定后无法更改\",\r\n      okText: \"是\",\r\n      cancelText: \"否\",\r\n      onOk() {\r\n        axios({\r\n          method: \"post\",\r\n          url: servicePath.updaTeOrder,\r\n          data: {\r\n            orderId: id,\r\n            state: state,\r\n          },\r\n          withCredentials: true,\r\n        }).then((res) => {\r\n          if (res.data.code == 1) {\r\n            message.success(\"订单已完成\");\r\n            getList();\r\n          }\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  const getGoods = (goods) => {\r\n    let string = \"\";\r\n    if (goods && goods.length > 0) {\r\n      goods = JSON.parse(goods);\r\n      for (var i = 0; i < goods.length; i++) {\r\n        let a = goods[i];\r\n        string += a.goodsName + \"x\" + a.count + \"  \";\r\n      }\r\n    }\r\n    return string;\r\n  };\r\n  const getStateTxt = (state) => {\r\n    let string = \"\";\r\n    if (state == 10) {\r\n      string = \"待付款\";\r\n    } else if (state == 30) {\r\n      string = \"已付款\";\r\n    } else if (state == 40) {\r\n      string = \"已完成\";\r\n    } else if (state == 50) {\r\n      string = \"已取消\";\r\n    } else if (state == 60) {\r\n      string = \"已退款\";\r\n    }\r\n    return string;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Row>\r\n          <Col\r\n            span={12}\r\n            style={{\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Radio.Group\r\n              buttonStyle=\"solid\"\r\n              onChange={(e) => {\r\n                setState(e.target.value);\r\n              }}\r\n              value={state}\r\n              defaultValue={30}\r\n            >\r\n              <Radio.Button value=\"\">全部</Radio.Button>\r\n              <Radio.Button value={10}>待付款</Radio.Button>\r\n              <Radio.Button value={30}>已付款</Radio.Button>\r\n              <Radio.Button value={40}>已完成</Radio.Button>\r\n              <Radio.Button value={50}>已取消</Radio.Button>\r\n              <Radio.Button value={60}>已退款</Radio.Button>\r\n            </Radio.Group>\r\n          </Col>\r\n          <Col\r\n            span={12}\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Input\r\n              style={{ width: 200, marginRight: 10 }}\r\n              placeholder=\"请输入用户名\"\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n              }}\r\n              value={userName}\r\n            ></Input>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                getList();\r\n              }}\r\n            >\r\n              搜索\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                margin: \"0 8px\",\r\n              }}\r\n              onClick={() => {\r\n                setUserName(\"\");\r\n              }}\r\n            >\r\n              清空\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingTop: 20,\r\n          paddingBottom: 10,\r\n          paddingLeft: 16,\r\n          paddingRight: 22,\r\n        }}\r\n      >\r\n        <Row className=\"list-div\">\r\n          <Col span={8}>\r\n            <b>商品</b>\r\n          </Col>\r\n          <Col span={3}>\r\n            <b>总价</b>\r\n          </Col>\r\n          <Col span={3}>\r\n            <b>订单时间</b>\r\n          </Col>\r\n          <Col span={3}>\r\n            <b>订单状态</b>\r\n          </Col>\r\n          <Col span={3}>\r\n            <b>用户</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>操作</b>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div\r\n        id=\"scrollableDiv\"\r\n        style={{\r\n          paddingLeft: \"16px\",\r\n          border: \"1px solid rgba(140, 140, 140, 0.35)\",\r\n        }}\r\n      >\r\n        <InfiniteScroll\r\n          dataLength={list.length}\r\n          scrollableTarget=\"scrollableDiv\"\r\n        >\r\n          <List\r\n            style={{ height: 700, overflowY: \"scroll\" }}\r\n            dataSource={list}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <Row\r\n                  className=\"list-div\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <Col span={8} style={{ paddingRight: 20 }}>\r\n                    {getGoods(item.goods)}\r\n                    {getGoods(item.goods)}\r\n                    {getGoods(item.goods)}\r\n                  </Col>\r\n                  <Col span={3}>{item.total_price}元</Col>\r\n                  <Col span={3}>{item.order_time}</Col>\r\n                  <Col span={3}>{getStateTxt(item.state)}</Col>\r\n                  <Col span={3}>{item.userName}</Col>\r\n                  <Col span={4}>\r\n                    <Button\r\n                      disabled={item.state != 30}\r\n                      type=\"primary\"\r\n                      style={{ marginRight: 10 }}\r\n                      onClick={() => deliverGoods(item.Id, 40)}\r\n                    >\r\n                      发货\r\n                    </Button>\r\n                    <Button\r\n                      disabled={item.state != 30 && item.state != 40}\r\n                      onClick={() => deliverGoods(item.Id, 60)}\r\n                    >\r\n                      退款\r\n                    </Button>\r\n                    &nbsp;\r\n                  </Col>\r\n                </Row>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderManageList;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\goodsManage\\GoodsList.js",["153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  List,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Button,\r\n  Avatar,\r\n  Radio,\r\n  Input,\r\n} from \"antd\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\nconst { confirm } = Modal;\r\n\r\nconst removeEmpty = (obj) => {\r\n  Object.keys(obj).forEach(function (key) {\r\n    (obj[key] && typeof obj[key] === \"object\" && removeEmpty(obj[key])) ||\r\n      ((obj[key] === undefined || obj[key] === null || obj[key] === \"\") &&\r\n        delete obj[key]);\r\n  });\r\n  return obj;\r\n};\r\nfunction GoodsList(props) {\r\n  const [list, setList] = useState([]);\r\n  const [state, setState] = useState();\r\n  const [goodsName, setGoodsName] = useState(\"\");\r\n\r\n  const getList = () => {\r\n    let params = {\r\n      state: state,\r\n      goodsName: goodsName,\r\n    };\r\n    params = removeEmpty(params);\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getGoods,\r\n      withCredentials: true,\r\n      params: params,\r\n    }).then((res) => {\r\n      console.log(res);\r\n      setList(res.data.data);\r\n    });\r\n  };\r\n\r\n  const updaTeGoodsState = (id, state) => {\r\n    confirm({\r\n      content: state == 20 ? \"确定下架该商品吗？\" : \"确定上架该商品吗？\",\r\n      okText: \"是\",\r\n      cancelText: \"否\",\r\n      onOk() {\r\n        let data = {\r\n          goodsId: id,\r\n          state: state,\r\n        };\r\n\r\n        axios({\r\n          method: \"post\",\r\n          url: servicePath.updaTeGoodsState,\r\n          data: data,\r\n          withCredentials: true,\r\n        }).then((res) => {\r\n          if (res.data.code == 1) {\r\n            message.success(\"操作成功\");\r\n            getList();\r\n          }\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  const editGoods = (id) => {\r\n    props.history.push(\"/index/goodsAdd/\" + id);\r\n  };\r\n  const deleteGoods = (id) => {\r\n    confirm({\r\n      title: \"确定删除该商品吗？\",\r\n      content: \"删除后不可恢复\",\r\n      okType: \"danger\",\r\n      okText: \"是\",\r\n      cancelText: \"否\",\r\n      onOk() {\r\n        axios({\r\n          method: \"post\",\r\n          url: servicePath.deleteGoods,\r\n          data: {\r\n            goodsId: id,\r\n          },\r\n          withCredentials: true,\r\n        }).then((res) => {\r\n          if (res.data.code == 1) {\r\n            message.success(\"操作成功\");\r\n            getList();\r\n          }\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n  const getStateTxt = (state) => {\r\n    let string = \"\";\r\n    if (state == 10) {\r\n      string = \"已上架\";\r\n    } else if (state == 20) {\r\n      string = \"已下架\";\r\n    }\r\n    return string;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Row>\r\n          <Col\r\n            span={12}\r\n            style={{\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <Radio.Group\r\n              buttonStyle=\"solid\"\r\n              onChange={(e) => {\r\n                setState(e.target.value);\r\n              }}\r\n              value={state}\r\n              defaultValue=\"\"\r\n            >\r\n              <Radio.Button value=\"\">全部</Radio.Button>\r\n              <Radio.Button value={10}>已上架</Radio.Button>\r\n              <Radio.Button value={20}>已下架</Radio.Button>\r\n            </Radio.Group>\r\n          </Col>\r\n          <Col\r\n            span={12}\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Input\r\n              style={{ width: 200, marginRight: 10 }}\r\n              placeholder=\"请输入商品名\"\r\n              onChange={(e) => {\r\n                setGoodsName(e.target.value);\r\n              }}\r\n              value={goodsName}\r\n            ></Input>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                getList();\r\n              }}\r\n            >\r\n              搜索\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                margin: \"0 8px\",\r\n              }}\r\n              onClick={() => {\r\n                setGoodsName(\"\");\r\n              }}\r\n            >\r\n              清空\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingTop: 20,\r\n          paddingBottom: 10,\r\n          paddingLeft: 16,\r\n          paddingRight: 22,\r\n        }}\r\n      >\r\n        <Row className=\"list-div\">\r\n          <Col span={4}>\r\n            <b>商品</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>名称</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>价格</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>状态</b>\r\n          </Col>\r\n          <Col span={8}>\r\n            <b>操作</b>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div\r\n        id=\"scrollableDiv\"\r\n        style={{\r\n          paddingLeft: \"16px\",\r\n          border: \"1px solid rgba(140, 140, 140, 0.35)\",\r\n        }}\r\n      >\r\n        <InfiniteScroll\r\n          dataLength={list.length}\r\n          scrollableTarget=\"scrollableDiv\"\r\n        >\r\n          <List\r\n            style={{ height: 700, overflowY: \"scroll\" }}\r\n            dataSource={list}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <Row\r\n                  className=\"list-div\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <Col span={4}>\r\n                    <Avatar shape=\"square\" size={54} src={item.goodsCoverUrl} />\r\n                  </Col>\r\n                  <Col span={4}>{item.goodsName}</Col>\r\n                  <Col span={4}>{item.price}元</Col>\r\n                  <Col span={4}>{getStateTxt(item.state)}</Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      style={{ marginRight: 10 }}\r\n                      disabled={item.state == 10}\r\n                      type=\"primary\"\r\n                      onClick={() => updaTeGoodsState(item.Id, 10)}\r\n                    >\r\n                      上架\r\n                    </Button>\r\n                    <Button\r\n                      style={{ marginRight: 10 }}\r\n                      disabled={item.state == 20}\r\n                      type=\"primary\"\r\n                      onClick={() => updaTeGoodsState(item.Id, 20)}\r\n                    >\r\n                      下架\r\n                    </Button>\r\n                    <Button\r\n                      style={{ marginRight: 10 }}\r\n                      type=\"primary\"\r\n                      onClick={() => editGoods(item.Id)}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Button onClick={() => deleteGoods(item.Id)}>删除</Button>\r\n                    &nbsp;\r\n                  </Col>\r\n                </Row>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoodsList;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\goodsManage\\GoodsAdd.js",["161","162","163","164","165","166","167","168","169","170"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Upload,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Radio,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport {\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  LeftSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\n\r\nconst GoodsAdd = (props) => {\r\n  const [Id, setId] = useState(-1);\r\n  // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [imageUrl, setImageUrl] = useState(\"\"); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [loading, setLoading] = useState(false); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n\r\n  useEffect(() => {\r\n    let tempId = props.match.params.id;\r\n    console.log(\"GoodsAdd--useEffect===\" + tempId);\r\n    if (tempId) {\r\n      setId(tempId);\r\n      getGoods(tempId);\r\n    }\r\n  }, []);\r\n\r\n  const getGoods = (Id) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getGoods,\r\n      params: { Id: Id },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      console.log(\"res.data.data========\" + JSON.stringify(res.data.data));\r\n      if (res.data.code == 1) {\r\n        let data = res.data.data[0];\r\n        form.setFieldsValue({\r\n          ...data,\r\n        });\r\n        setImageUrl(data.goodsCoverUrl);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        form.setFieldsValue({\r\n          goodsCoverUrl: imageUrl,\r\n        });\r\n      });\r\n    }\r\n  };\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJPG = file.type === \"image/jpeg\";\r\n    const isPNG = file.type === \"image/png\";\r\n    const isGIF = file.type === \"image/gif\";\r\n    const isBMP = file.type === \"image/bmp\";\r\n    if (!(isJPG || isPNG || isGIF || isBMP)) {\r\n      message.error(\"您只能上传PNG、JPG、JPEG、Gif、BMP格式的图片\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"您上传的图片不能超过2MB!\");\r\n    }\r\n    return (isJPG || isPNG || isGIF || isBMP) && isLt2M;\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.Id = Id;\r\n    console.log(\"Success:\", values);\r\n    axios({\r\n      method: \"post\",\r\n      url: servicePath.updaTeGoods,\r\n      data: values,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      if (res.data.code == 1) {\r\n        message.success(Id == -1 ? \"创建成功\" : \"修改成功\");\r\n        props.history.push(\"/index/goodsList\");\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 8,\r\n    },\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {Id != -1 && Id != 0 ? (\r\n        <div onClick={handleBack} style={{ width: \"60px\" }}>\r\n          <LeftSquareOutlined /> 返回\r\n        </div>\r\n      ) : null}\r\n\r\n      <Form {...layout} form={form} onFinish={onFinish}>\r\n        <Form.Item\r\n          name=\"goodsName\"\r\n          label=\"商品名\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"price\"\r\n          label=\"价格\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item name=\"goodsCoverUrl\" label=\"商品图片\" initialValue=\"\">\r\n          <Upload\r\n            listType=\"picture-card\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? (\r\n              <img\r\n                src={imageUrl}\r\n                alt=\"avatar\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"是否上架\" name=\"state\" initialValue={10}>\r\n          <Radio.Group>\r\n            <Radio.Button value={10}>是</Radio.Button>\r\n            <Radio.Button value={20}>否</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {Id == -1 ? \"确认创建\" : \"确认修改\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoodsAdd;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\teamManage\\TeamList.js",["171","172","173","174","175","176","177","178","179","180","181","182"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\teamManage\\TeamAdd.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\roomManage\\RoomAdd.js",["197","198","199","200","201","202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../static/css/roomManage/RoomAdd.css\";\r\nimport {\r\n  Form,\r\n  Upload,\r\n  Input,\r\n  message,\r\n  Button,\r\n} from \"antd\";\r\nimport {\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  LeftSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\n\r\nconst RoomAdd = (props) => {\r\n  const [Id, setId] = useState(-1); // Dm的ID，如果是-1说明是新增加，如果不是0，说明是修改\r\n  const [imageUrl, setImageUrl] = useState(\"\"); //房间照片\r\n  const [loading, setLoading] = useState(false); //上传中\r\n\r\n  useEffect(() => {\r\n    let tempId = props.match.params.id;\r\n    if (tempId) {\r\n      setId(tempId);\r\n      getRoomDetail(tempId);\r\n    }\r\n  }, []);\r\n\r\n  const getRoomDetail = (Id) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getRoomDetail,\r\n      params: { Id: Id },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      if (res.data.code == 1) {\r\n        let data = res.data.data[0];\r\n        form.setFieldsValue({\r\n          ...data,\r\n        });\r\n        setImageUrl(data.roomDecorate);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        form.setFieldsValue({\r\n          roomDecorate: imageUrl,\r\n        });\r\n      });\r\n    }\r\n  };\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJPG = file.type === \"image/jpeg\";\r\n    const isPNG = file.type === \"image/png\";\r\n    const isGIF = file.type === \"image/gif\";\r\n    const isBMP = file.type === \"image/bmp\";\r\n    if (!(isJPG || isPNG || isGIF || isBMP)) {\r\n      message.error(\"您只能上传PNG、JPG、JPEG、Gif、BMP格式的图片\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"您上传的图片不能超过2MB!\");\r\n    }\r\n    return (isJPG || isPNG || isGIF || isBMP) && isLt2M;\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.Id = Id;\r\n    console.log(\"Success:\", values);\r\n    axios({\r\n      method: \"post\",\r\n      url: servicePath.updaTeRoom,\r\n      data: values,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      if (res.data.code == 1) {\r\n        message.success(Id == -1 ? \"创建成功\" : \"修改成功\");\r\n        props.history.push(\"/index/roomList\");\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 8,\r\n    },\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"page-room-add\">\r\n      {Id != -1 && Id != 0 ? (\r\n        <div onClick={handleBack} style={{ width: \"60px\" }}>\r\n          <LeftSquareOutlined /> 返回\r\n        </div>\r\n      ) : null}\r\n\r\n      <Form {...layout} form={form} onFinish={onFinish}>\r\n        <Form.Item name=\"roomDecorate\" label=\"房间装修\" initialValue=\"\">\r\n          <Upload\r\n            listType=\"picture-card\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? (\r\n              <img\r\n                src={imageUrl}\r\n                alt=\"avatar\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"roomName\"\r\n          label=\"房间风格\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"roomLabel\"\r\n          label=\"房间号\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {Id == -1 ? \"确认创建\" : \"确认修改\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomAdd;\r\n","E:\\projects\\react\\admin_mm_store_ms\\src\\Pages\\roomManage\\RoomList.js",["204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport { List, Row, Col, Modal, message, Button, Image } from \"antd\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../config/apiUrl\";\r\nconst { confirm } = Modal;\r\n\r\nconst removeEmpty = (obj) => {\r\n  Object.keys(obj).forEach(function (key) {\r\n    (obj[key] && typeof obj[key] === \"object\" && removeEmpty(obj[key])) ||\r\n      ((obj[key] === undefined || obj[key] === null || obj[key] === \"\") &&\r\n        delete obj[key]);\r\n  });\r\n  return obj;\r\n};\r\nfunction RoomList(props) {\r\n  const [list, setList] = useState([]);\r\n\r\n  const getList = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.getRooms,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      setList(res.data.data);\r\n    });\r\n  };\r\n\r\n  const editRoom = (id) => {\r\n    props.history.push(\"/index/roomAdd/\" + id);\r\n  };\r\n  const deleteRoom = (id) => {\r\n    confirm({\r\n      title: \"确定删除该房间吗？\",\r\n      content: \"删除后不可恢复\",\r\n      okType: \"danger\",\r\n      okText: \"是\",\r\n      cancelText: \"否\",\r\n      onOk() {\r\n        axios({\r\n          method: \"post\",\r\n          url: servicePath.deleteRoom,\r\n          data: {\r\n            roomId: id,\r\n          },\r\n          withCredentials: true,\r\n        }).then((res) => {\r\n          if (res.data.code == 1) {\r\n            message.success(\"操作成功\");\r\n            getList();\r\n          }\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          paddingTop: 20,\r\n          paddingBottom: 10,\r\n          paddingLeft: 16,\r\n          paddingRight: 22,\r\n        }}\r\n      >\r\n        <Row className=\"list-div\">\r\n          <Col span={8}>\r\n            <b>房间装修</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>房间风格</b>\r\n          </Col>\r\n          <Col span={4}>\r\n            <b>房间号</b>\r\n          </Col>\r\n          <Col span={8}>\r\n            <b>操作</b>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div\r\n        id=\"scrollableDiv\"\r\n        style={{\r\n          paddingLeft: \"16px\",\r\n          border: \"1px solid rgba(140, 140, 140, 0.35)\",\r\n        }}\r\n      >\r\n        <InfiniteScroll\r\n          dataLength={list.length}\r\n          scrollableTarget=\"scrollableDiv\"\r\n        >\r\n          <List\r\n            style={{ height: 700, overflowY: \"scroll\" }}\r\n            dataSource={list}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <Row\r\n                  className=\"list-div\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <Col span={8}>\r\n                    <Image\r\n                      preview={false}\r\n                      src={item.roomDecorate}\r\n                      style={{ width: 160, height: 90 }}\r\n                    />\r\n                  </Col>\r\n                  <Col span={4}>{item.roomName}</Col>\r\n                  <Col span={4}>{item.roomLabel}</Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      style={{ marginRight: 10 }}\r\n                      type=\"primary\"\r\n                      onClick={() => editRoom(item.Id)}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Button onClick={() => deleteRoom(item.Id)}>删除</Button>\r\n                    &nbsp;\r\n                  </Col>\r\n                </Row>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomList;\r\n",{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":5,"column":3,"nodeType":"212","messageId":"213","endLine":5,"endColumn":19},{"ruleId":"210","severity":1,"message":"214","line":6,"column":3,"nodeType":"212","messageId":"213","endLine":6,"endColumn":15},{"ruleId":"210","severity":1,"message":"215","line":11,"column":3,"nodeType":"212","messageId":"213","endLine":11,"endColumn":25},{"ruleId":"210","severity":1,"message":"216","line":29,"column":9,"nodeType":"212","messageId":"213","endLine":29,"endColumn":15},{"ruleId":"210","severity":1,"message":"217","line":29,"column":26,"nodeType":"212","messageId":"213","endLine":29,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":50,"column":15,"nodeType":"220","messageId":"221","endLine":50,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":58,"column":15,"nodeType":"220","messageId":"221","endLine":58,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":66,"column":15,"nodeType":"220","messageId":"221","endLine":66,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":74,"column":15,"nodeType":"220","messageId":"221","endLine":74,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":82,"column":15,"nodeType":"220","messageId":"221","endLine":82,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":129,"column":38,"nodeType":"220","messageId":"221","endLine":129,"endColumn":40},{"ruleId":"218","severity":1,"message":"219","line":43,"column":25,"nodeType":"220","messageId":"221","endLine":43,"endColumn":27},{"ruleId":"210","severity":1,"message":"223","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":13},{"ruleId":"210","severity":1,"message":"224","line":3,"column":15,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"225","line":9,"column":10,"nodeType":"212","messageId":"213","endLine":9,"endColumn":12},{"ruleId":"226","severity":1,"message":"227","line":20,"column":6,"nodeType":"228","endLine":20,"endColumn":8,"suggestions":"229"},{"ruleId":"218","severity":1,"message":"219","line":31,"column":25,"nodeType":"220","messageId":"221","endLine":31,"endColumn":27},{"ruleId":"210","severity":1,"message":"230","line":85,"column":9,"nodeType":"212","messageId":"213","endLine":85,"endColumn":23},{"ruleId":"210","severity":1,"message":"231","line":3,"column":50,"nodeType":"212","messageId":"213","endLine":3,"endColumn":56},{"ruleId":"218","severity":1,"message":"219","line":83,"column":43,"nodeType":"220","messageId":"221","endLine":83,"endColumn":45},{"ruleId":"210","severity":1,"message":"232","line":3,"column":26,"nodeType":"212","messageId":"213","endLine":3,"endColumn":31},{"ruleId":"210","severity":1,"message":"233","line":3,"column":33,"nodeType":"212","messageId":"213","endLine":3,"endColumn":40},{"ruleId":"210","severity":1,"message":"231","line":3,"column":50,"nodeType":"212","messageId":"213","endLine":3,"endColumn":56},{"ruleId":"218","severity":1,"message":"219","line":86,"column":48,"nodeType":"220","messageId":"221","endLine":86,"endColumn":50},{"ruleId":"210","severity":1,"message":"223","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":13},{"ruleId":"210","severity":1,"message":"224","line":3,"column":15,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"234","line":11,"column":10,"nodeType":"212","messageId":"213","endLine":11,"endColumn":15},{"ruleId":"226","severity":1,"message":"235","line":28,"column":6,"nodeType":"228","endLine":28,"endColumn":8,"suggestions":"236"},{"ruleId":"218","severity":1,"message":"219","line":37,"column":25,"nodeType":"220","messageId":"221","endLine":37,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":53,"column":25,"nodeType":"220","messageId":"221","endLine":53,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":108,"column":15,"nodeType":"220","messageId":"221","endLine":108,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":112,"column":25,"nodeType":"220","messageId":"221","endLine":112,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":113,"column":28,"nodeType":"220","messageId":"221","endLine":113,"endColumn":30},{"ruleId":"210","severity":1,"message":"230","line":120,"column":9,"nodeType":"212","messageId":"213","endLine":120,"endColumn":23},{"ruleId":"218","severity":1,"message":"222","line":150,"column":11,"nodeType":"220","messageId":"221","endLine":150,"endColumn":13},{"ruleId":"218","severity":1,"message":"222","line":150,"column":23,"nodeType":"220","messageId":"221","endLine":150,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":205,"column":17,"nodeType":"220","messageId":"221","endLine":205,"endColumn":19},{"ruleId":"210","severity":1,"message":"223","line":4,"column":3,"nodeType":"212","messageId":"213","endLine":4,"endColumn":6},{"ruleId":"210","severity":1,"message":"224","line":5,"column":3,"nodeType":"212","messageId":"213","endLine":5,"endColumn":6},{"ruleId":"210","severity":1,"message":"234","line":26,"column":10,"nodeType":"212","messageId":"213","endLine":26,"endColumn":15},{"ruleId":"226","severity":1,"message":"237","line":48,"column":6,"nodeType":"228","endLine":48,"endColumn":8,"suggestions":"238"},{"ruleId":"218","severity":1,"message":"219","line":57,"column":25,"nodeType":"220","messageId":"221","endLine":57,"endColumn":27},{"ruleId":"218","severity":1,"message":"222","line":110,"column":12,"nodeType":"220","messageId":"221","endLine":110,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":119,"column":15,"nodeType":"220","messageId":"221","endLine":119,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":123,"column":25,"nodeType":"220","messageId":"221","endLine":123,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":124,"column":28,"nodeType":"220","messageId":"221","endLine":124,"endColumn":30},{"ruleId":"210","severity":1,"message":"230","line":131,"column":9,"nodeType":"212","messageId":"213","endLine":131,"endColumn":23},{"ruleId":"218","severity":1,"message":"222","line":161,"column":11,"nodeType":"220","messageId":"221","endLine":161,"endColumn":13},{"ruleId":"218","severity":1,"message":"222","line":161,"column":23,"nodeType":"220","messageId":"221","endLine":161,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":177,"column":15,"nodeType":"241","endLine":177,"endColumn":73},{"ruleId":"218","severity":1,"message":"219","line":454,"column":17,"nodeType":"220","messageId":"221","endLine":454,"endColumn":19},{"ruleId":"210","severity":1,"message":"231","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":9},{"ruleId":"210","severity":1,"message":"242","line":11,"column":3,"nodeType":"212","messageId":"213","endLine":11,"endColumn":9},{"ruleId":"210","severity":1,"message":"243","line":42,"column":9,"nodeType":"212","messageId":"213","endLine":42,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":253,"column":41,"nodeType":"220","messageId":"221","endLine":253,"endColumn":43},{"ruleId":"210","severity":1,"message":"231","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":9},{"ruleId":"218","severity":1,"message":"219","line":52,"column":15,"nodeType":"220","messageId":"221","endLine":52,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":66,"column":29,"nodeType":"220","messageId":"221","endLine":66,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":89,"column":15,"nodeType":"220","messageId":"221","endLine":89,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":91,"column":22,"nodeType":"220","messageId":"221","endLine":91,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":93,"column":22,"nodeType":"220","messageId":"221","endLine":93,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":95,"column":22,"nodeType":"220","messageId":"221","endLine":95,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":97,"column":22,"nodeType":"220","messageId":"221","endLine":97,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":105,"column":6,"nodeType":"228","endLine":105,"endColumn":13,"suggestions":"245"},{"ruleId":"218","severity":1,"message":"222","line":228,"column":44,"nodeType":"220","messageId":"221","endLine":228,"endColumn":46},{"ruleId":"218","severity":1,"message":"222","line":236,"column":44,"nodeType":"220","messageId":"221","endLine":236,"endColumn":46},{"ruleId":"218","severity":1,"message":"222","line":236,"column":64,"nodeType":"220","messageId":"221","endLine":236,"endColumn":66},{"ruleId":"218","severity":1,"message":"219","line":51,"column":22,"nodeType":"220","messageId":"221","endLine":51,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":66,"column":29,"nodeType":"220","messageId":"221","endLine":66,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":95,"column":29,"nodeType":"220","messageId":"221","endLine":95,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":106,"column":15,"nodeType":"220","messageId":"221","endLine":106,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":108,"column":22,"nodeType":"220","messageId":"221","endLine":108,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":116,"column":6,"nodeType":"228","endLine":116,"endColumn":13,"suggestions":"246"},{"ruleId":"218","severity":1,"message":"219","line":231,"column":44,"nodeType":"220","messageId":"221","endLine":231,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":239,"column":44,"nodeType":"220","messageId":"221","endLine":239,"endColumn":46},{"ruleId":"210","severity":1,"message":"223","line":3,"column":3,"nodeType":"212","messageId":"213","endLine":3,"endColumn":6},{"ruleId":"210","severity":1,"message":"224","line":4,"column":3,"nodeType":"212","messageId":"213","endLine":4,"endColumn":6},{"ruleId":"226","severity":1,"message":"247","line":34,"column":6,"nodeType":"228","endLine":34,"endColumn":8,"suggestions":"248"},{"ruleId":"218","severity":1,"message":"219","line":44,"column":25,"nodeType":"220","messageId":"221","endLine":44,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":103,"column":25,"nodeType":"220","messageId":"221","endLine":103,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":104,"column":28,"nodeType":"220","messageId":"221","endLine":104,"endColumn":30},{"ruleId":"210","severity":1,"message":"230","line":111,"column":9,"nodeType":"212","messageId":"213","endLine":111,"endColumn":23},{"ruleId":"218","severity":1,"message":"222","line":141,"column":11,"nodeType":"220","messageId":"221","endLine":141,"endColumn":13},{"ruleId":"218","severity":1,"message":"222","line":141,"column":23,"nodeType":"220","messageId":"221","endLine":141,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":197,"column":17,"nodeType":"220","messageId":"221","endLine":197,"endColumn":19},{"ruleId":"218","severity":1,"message":"219","line":55,"column":15,"nodeType":"220","messageId":"221","endLine":55,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":69,"column":29,"nodeType":"220","messageId":"221","endLine":69,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":89,"column":25,"nodeType":"220","messageId":"221","endLine":89,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":98,"column":15,"nodeType":"220","messageId":"221","endLine":98,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":100,"column":22,"nodeType":"220","messageId":"221","endLine":100,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":102,"column":22,"nodeType":"220","messageId":"221","endLine":102,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":110,"column":6,"nodeType":"228","endLine":110,"endColumn":13,"suggestions":"249"},{"ruleId":"226","severity":1,"message":"244","line":113,"column":6,"nodeType":"228","endLine":113,"endColumn":20,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":150,"column":41,"nodeType":"253","messageId":"254","endLine":150,"endColumn":43},{"ruleId":"218","severity":1,"message":"222","line":257,"column":37,"nodeType":"220","messageId":"221","endLine":257,"endColumn":39},{"ruleId":"218","severity":1,"message":"219","line":267,"column":45,"nodeType":"220","messageId":"221","endLine":267,"endColumn":47},{"ruleId":"218","severity":1,"message":"219","line":275,"column":45,"nodeType":"220","messageId":"221","endLine":275,"endColumn":47},{"ruleId":"210","severity":1,"message":"223","line":3,"column":3,"nodeType":"212","messageId":"213","endLine":3,"endColumn":6},{"ruleId":"210","severity":1,"message":"224","line":4,"column":3,"nodeType":"212","messageId":"213","endLine":4,"endColumn":6},{"ruleId":"226","severity":1,"message":"255","line":33,"column":6,"nodeType":"228","endLine":33,"endColumn":8,"suggestions":"256"},{"ruleId":"218","severity":1,"message":"219","line":43,"column":25,"nodeType":"220","messageId":"221","endLine":43,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":61,"column":25,"nodeType":"220","messageId":"221","endLine":61,"endColumn":27},{"ruleId":"218","severity":1,"message":"222","line":72,"column":12,"nodeType":"220","messageId":"221","endLine":72,"endColumn":14},{"ruleId":"218","severity":1,"message":"222","line":98,"column":15,"nodeType":"220","messageId":"221","endLine":98,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":102,"column":25,"nodeType":"220","messageId":"221","endLine":102,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":103,"column":28,"nodeType":"220","messageId":"221","endLine":103,"endColumn":30},{"ruleId":"218","severity":1,"message":"222","line":146,"column":11,"nodeType":"220","messageId":"221","endLine":146,"endColumn":13},{"ruleId":"218","severity":1,"message":"222","line":146,"column":23,"nodeType":"220","messageId":"221","endLine":146,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":181,"column":15,"nodeType":"241","endLine":189,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":235,"column":17,"nodeType":"220","messageId":"221","endLine":235,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":292,"column":11,"nodeType":"241","endLine":300,"endColumn":13},{"ruleId":"226","severity":1,"message":"257","line":29,"column":6,"nodeType":"228","endLine":29,"endColumn":8,"suggestions":"258"},{"ruleId":"218","severity":1,"message":"219","line":38,"column":25,"nodeType":"220","messageId":"221","endLine":38,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":97,"column":25,"nodeType":"220","messageId":"221","endLine":97,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":98,"column":28,"nodeType":"220","messageId":"221","endLine":98,"endColumn":30},{"ruleId":"218","severity":1,"message":"222","line":131,"column":11,"nodeType":"220","messageId":"221","endLine":131,"endColumn":13},{"ruleId":"218","severity":1,"message":"222","line":131,"column":23,"nodeType":"220","messageId":"221","endLine":131,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":181,"column":17,"nodeType":"220","messageId":"221","endLine":181,"endColumn":19},{"ruleId":"210","severity":1,"message":"259","line":8,"column":7,"nodeType":"212","messageId":"213","endLine":8,"endColumn":18},{"ruleId":"218","severity":1,"message":"219","line":48,"column":29,"nodeType":"220","messageId":"221","endLine":48,"endColumn":31},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'PieChartOutlined' is defined but never used.","Identifier","unusedVar","'FileOutlined' is defined but never used.","'ReconciliationOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Row' is defined but never used.","'Col' is defined but never used.","'Id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["262"],"'onFinishFailed' is assigned a value but never used.","'Switch' is defined but never used.","'Modal' is defined but never used.","'message' is defined but never used.","'icons' is defined but never used.","React Hook useEffect has missing dependencies: 'autoId', 'getUser', and 'props.match.params.id'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'getDramaDetail' and 'props.match.params.id'. Either include them or remove the dependency array.",["264"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'deleteArticle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["265"],["266"],"React Hook useEffect has missing dependencies: 'getGoods' and 'props.match.params.id'. Either include them or remove the dependency array.",["267"],["268"],["269"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'getTeamDetail' and 'props.match.params.id'. Either include them or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'getRoomDetail' and 'props.match.params.id'. Either include them or remove the dependency array.",["271"],"'removeEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"281","fix":"282"},{"desc":"278","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [props.match.params.id]",{"range":"290","text":"291"},"Update the dependencies array to be: [autoId, getUser, props.match.params.id]",{"range":"292","text":"293"},"Update the dependencies array to be: [getDramaDetail, props.match.params.id]",{"range":"294","text":"295"},"Update the dependencies array to be: [getList, state]",{"range":"296","text":"297"},{"range":"298","text":"297"},"Update the dependencies array to be: [getGoods, props.match.params.id]",{"range":"299","text":"300"},{"range":"301","text":"297"},"Update the dependencies array to be: [getList, selectDmUser]",{"range":"302","text":"303"},"Update the dependencies array to be: [getTeamDetail, props.match.params.id]",{"range":"304","text":"305"},"Update the dependencies array to be: [getRoomDetail, props.match.params.id]",{"range":"306","text":"307"},[742,744],"[props.match.params.id]",[910,912],"[autoId, getUser, props.match.params.id]",[1196,1198],"[getDramaDetail, props.match.params.id]",[2467,2474],"[getList, state]",[2643,2650],[815,817],"[getGoods, props.match.params.id]",[2606,2613],[2659,2673],"[getList, selectDmUser]",[909,911],"[getTeamDetail, props.match.params.id]",[719,721],"[getRoomDetail, props.match.params.id]"]